<Project>
    <PropertyGroup Label="Tailwind.Hosting Properties">
        <_TailwindExecutableFolder>$(MSBuildProjectDirectory)/$(OutputPath)</_TailwindExecutableFolder>
        
        <TailwindVersion Condition="'$(TailwindWatch)' == ''">latest</TailwindVersion>
        <TailwindWatch Condition="'$(TailwindWatch)' == ''">true</TailwindWatch>

        <TailwindInputCssFile Condition="'$(TailwindInputCssFile)' == ''">wwwroot/styles.css</TailwindInputCssFile>
        <TailwindOutputCssFile Condition="'$(TailwindOutputCssFile)' == ''">wwwroot/app.css</TailwindOutputCssFile>

        <TailwindConfigFile Condition="'$(TailwindConfigFile)' == ''">tailwind.config.js</TailwindConfigFile>

        <_TailwindConfig>$(OutputPath)tailwind.props.json</_TailwindConfig>
    </PropertyGroup>

    <!--Download Tailwindcss executable-->
    <Target 
        Name="SetupExecutableTask"
        AfterTargets="Build"
        Condition="!Exists('$(_TailwindExecutablePath)')"
    >   
        <SetupExecutableTask 
            TailwindExecutableFolder="$(_TailwindExecutableFolder)"
            TailwindVersion="$(TailwindVersion)"
        >
            <Output TaskParameter="TailwindExecutablePath" PropertyName="_TailwindExecutablePath"/>
        </SetupExecutableTask>

        <ItemGroup>
            <Content
                Include="$(_TailwindExecutablePath)" 
                CopyToOutputDirectory="PreserveNewest" 
                CopyToPublishDirectory="Never"
            />
        </ItemGroup>
    </Target>

    <!--Create Tailwind configuration props file-->
    <Target Name="WriteTailwindConfiguration" AfterTargets="SetupExecutableTask" DependsOnTargets="SetupExecutableTask">
        <PropertyGroup>
            <_TailwindBaseWorkingDirectory>$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '$(TailwindWorkingDirectory)'))</_TailwindBaseWorkingDirectory>
                
            <_TailwindWorkingDirectory>$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '$(TailwindWorkingDirectory)').Replace('\','\\'))</_TailwindWorkingDirectory>
            
            <_TailwindExecutablePath>$([System.IO.Path]::Combine('$(_TailwindExecutablePath)').Replace('\','\\'))</_TailwindExecutablePath>
        
            <_TailwindInputCssFile>$([System.IO.Path]::Combine('$(_TailwindBaseWorkingDirectory)', '$(TailwindInputCssFile)').Replace('\','\\'))</_TailwindInputCssFile>
            
            <_TailwindOutputCssFile>$([System.IO.Path]::Combine('$(_TailwindBaseWorkingDirectory)', '$(TailwindOutputCssFile)').Replace('\','\\'))</_TailwindOutputCssFile>
            
            <_TailwindTailwindConfigFile>$([System.IO.Path]::Combine('$(_TailwindBaseWorkingDirectory)', '$(TailwindConfigFile)').Replace('\','\\'))</_TailwindTailwindConfigFile>
        </PropertyGroup>
        
        <ItemGroup>
            <_TailwindConfigLines Include="{" />
            <_TailwindConfigLines Include="&quot;TailwindProps&quot;:{" />
            <_TailwindConfigLines Include="&quot;ExecutablePath&quot;:&quot;$(_TailwindExecutablePath)&quot;," />
            <_TailwindConfigLines Include="&quot;IsWatchEnabled&quot;:&quot;$(TailwindWatch)&quot;," />
            <_TailwindConfigLines Include="&quot;WorkingDirectory&quot;:&quot;$(_TailwindWorkingDirectory)&quot;," />
            <_TailwindConfigLines Include="&quot;InputCssFile&quot;:&quot;$(_TailwindInputCssFile)&quot;," />
            <_TailwindConfigLines Include="&quot;OutputCssFile&quot;:&quot;$(_TailwindOutputCssFile)&quot;," />
            <_TailwindConfigLines Include="&quot;ConfigFile&quot;:&quot;$(_TailwindTailwindConfigFile)&quot;" />
            <_TailwindConfigLines Include="  }" />
            <_TailwindConfigLines Include="}" />
        </ItemGroup>

        <WriteLinesToFile File="$(_TailwindConfig)" Lines="@(_TailwindConfigLines)" WriteOnlyWhenDifferent="true" Overwrite="true" />

        <ItemGroup>
            <ContentWithTargetPath Include="$(_TailwindConfig)" CopyToOutputDirectory="PreserveNewest" CopyToPublishDirectory="Never" TargetPath="tailwind.props.json" />
            <FileWrites Include="$(_TailwindConfig)" />
            <Message Text="Writing Tailwind config file $(_TailwindConfig)" Importance="high"/>
        </ItemGroup>
    </Target>
     
    <!--The generated file is deleted after a general clean. It will force the regeneration on rebuild-->
    <Target Name="AfterClean">
		<Delete Files="$(_TailwindConfig)" />
	</Target>
</Project>